Index: app/src/main/java/com/example/myapplication/GraphActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.myapplication;\r\n\r\nimport android.content.ContentResolver;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.View;\r\nimport android.webkit.MimeTypeMap;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class GraphActivity extends AppCompatActivity{\r\n\r\n    private RecyclerView RecView;\r\n    private ImageAdapter IAdapter;\r\n    private DatabaseReference DB_Ref;\r\n    private List<Image> Limages;\r\n    private ProgressBar pro_Cir;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_graph_view);\r\n\r\n        /*runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                RecView = findViewById(R.id.recycler_vi);\r\n                RecView.setLayoutManager(new LinearLayoutManager(getApplicationContext()));\r\n                RecView.setHasFixedSize(true);\r\n            }\r\n        });*/\r\n        RecView = findViewById(R.id.recycler_vi);\r\n        RecView.setLayoutManager(new LinearLayoutManager(this));\r\n        RecView.setHasFixedSize(true);\r\n\r\n        pro_Cir = findViewById(R.id.progress_circular);\r\n        Limages = new ArrayList<>();\r\n\r\n        DB_Ref = FirebaseDatabase.getInstance().getReference(\"Project\").child(Long.toString(Project.projectId)).child(\"Images\");\r\n        Read_Images();\r\n        setupImage();\r\n        setupView();\r\n        setupButton();\r\n    }\r\n\r\n    private void Read_Images(){\r\n        DB_Ref.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                Limages.clear();\r\n                for(DataSnapshot snapshot : dataSnapshot.getChildren()){\r\n                    String imageUrl = snapshot.getValue().toString();\r\n//                    System.out.println(imageUrl);\r\n                    Image images = snapshot.getValue(Image.class);\r\n                    Limages.add(images);\r\n                }\r\n//                System.out.println(Limages.size());\r\n                IAdapter = new ImageAdapter(GraphActivity.this, Limages);\r\n                RecView.setAdapter(IAdapter);\r\n                //IAdapter.notifyDataSetChanged();\r\n                pro_Cir.setVisibility(View.INVISIBLE);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Toast.makeText(getApplicationContext(), \"Error!\", Toast.LENGTH_SHORT).show();\r\n                pro_Cir.setVisibility(View.INVISIBLE);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setupImage(){\r\n\r\n    }\r\n\r\n    private void setupView(){\r\n\r\n        //ImageView graphList = findViewById(R.id.ImageView);\r\n\r\n    }\r\n\r\n    private void setupButton(){\r\n        Button btUpload = findViewById(R.id.buttonUpload);\r\n        btUpload.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(GraphActivity.this, ImageChooser.class));\r\n            }\r\n        });\r\n\r\n        Button btDelete = findViewById(R.id.buttonDelete);\r\n        btDelete.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                deleteGraph();\r\n            }\r\n        });\r\n\r\n        Button btBack = findViewById(R.id.buttonBack);\r\n        btBack.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void uploadGraph(){\r\n\r\n    }\r\n\r\n\r\n    private void deleteGraph(){\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/myapplication/GraphActivity.java	(revision 8deda9ef76881ae2827ebbeead60412a3a07bdbd)
+++ app/src/main/java/com/example/myapplication/GraphActivity.java	(date 1604071314615)
@@ -35,6 +35,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import javax.annotation.RegEx;
+
 public class GraphActivity extends AppCompatActivity{
 
     private RecyclerView RecView;
@@ -42,6 +44,8 @@
     private DatabaseReference DB_Ref;
     private List<Image> Limages;
     private ProgressBar pro_Cir;
+    private boolean isDelete = false;
+    private Button btUpload, btDelete, btBack;
 
 
     @Override
@@ -82,9 +86,20 @@
                     Image images = snapshot.getValue(Image.class);
                     Limages.add(images);
                 }
-//                System.out.println(Limages.size());
+
                 IAdapter = new ImageAdapter(GraphActivity.this, Limages);
+
                 RecView.setAdapter(IAdapter);
+                RecView.setClickable(true);
+                RecView.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        int itemPos = RecView.getChildLayoutPosition(v);
+                        System.out.println("Item Pos: " + itemPos);
+                    }
+                });
+
+
                 //IAdapter.notifyDataSetChanged();
                 pro_Cir.setVisibility(View.INVISIBLE);
             }
@@ -108,7 +123,7 @@
     }
 
     private void setupButton(){
-        Button btUpload = findViewById(R.id.buttonUpload);
+        btUpload = findViewById(R.id.buttonUpload);
         btUpload.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -116,7 +131,7 @@
             }
         });
 
-        Button btDelete = findViewById(R.id.buttonDelete);
+        btDelete = findViewById(R.id.buttonDelete);
         btDelete.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -124,7 +139,7 @@
             }
         });
 
-        Button btBack = findViewById(R.id.buttonBack);
+        btBack = findViewById(R.id.buttonBack);
         btBack.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -134,11 +149,6 @@
 
     }
 
-    private void uploadGraph(){
-
-    }
-
-
     private void deleteGraph(){
 
     }
