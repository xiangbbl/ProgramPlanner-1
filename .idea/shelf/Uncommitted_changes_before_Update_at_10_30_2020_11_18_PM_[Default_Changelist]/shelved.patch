Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM__Default_Changelist_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM__Default_Changelist_.xml	(date 1604117041498)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM__Default_Changelist_.xml	(date 1604117041498)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]" date="1604086216740" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10/30/2020 2:30 PM [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM__Default_Changelist_1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM__Default_Changelist_1.xml	(date 1604117041884)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM__Default_Changelist_1.xml	(date 1604117041884)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]1" date="1604086250849" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]1/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 10/30/2020 2:30 PM [Default Changelist]" />
+</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]1/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]1/shelved.patch	(date 1604086250848)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]1/shelved.patch	(date 1604086250848)
@@ -0,0 +1,52 @@
+Index: app/src/main/java/com/example/myapplication/Image.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.myapplication;\r\n\r\nimport com.google.firebase.database.Exclude;\r\n\r\npublic class Image {\r\n    public String ImageUrl;\r\n    //private String mKey;\r\n\r\n    public Image(String ImageUrl){\r\n        this.ImageUrl =  ImageUrl;\r\n    }\r\n\r\n    /*@Exclude\r\n    public String getmKey(){\r\n        return mKey;\r\n    }\r\n\r\n    @Exclude\r\n    public void setKey(String key){\r\n        mKey = key;\r\n    }*/\r\n    public Image(){}\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- app/src/main/java/com/example/myapplication/Image.java	(revision 8deda9ef76881ae2827ebbeead60412a3a07bdbd)
++++ app/src/main/java/com/example/myapplication/Image.java	(date 1604070460606)
+@@ -4,20 +4,13 @@
+ 
+ public class Image {
+     public String ImageUrl;
++    public String uploadId;
++
+     //private String mKey;
+ 
+     public Image(String ImageUrl){
+         this.ImageUrl =  ImageUrl;
+     }
+ 
+-    /*@Exclude
+-    public String getmKey(){
+-        return mKey;
+-    }
+-
+-    @Exclude
+-    public void setKey(String key){
+-        mKey = key;
+-    }*/
+     public Image(){}
+ }
+Index: app/src/main/java/com/example/myapplication/ImageAdapter.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.myapplication;\r\n\r\nimport android.content.Context;\r\nimport android.view.ContextMenu;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.List;\r\n\r\npublic class ImageAdapter extends RecyclerView.Adapter<ImageAdapter.ImageHolder> {\r\n    private Context context;\r\n    private List<Image> images;\r\n\r\n    public ImageAdapter(Context Icontext, List<Image> image){\r\n\r\n        context = Icontext;\r\n        images = image;\r\n    }\r\n    @NonNull\r\n    @Override\r\n    public ImageHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.image_item, parent, false);\r\n        return new ImageHolder(v);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ImageHolder holder, int position) {\r\n        Image curr = images.get(position);\r\n\r\n        Picasso.with(context)\r\n                .load(curr.ImageUrl)\r\n                .placeholder(R.mipmap.ic_launcher)\r\n                .fit()\r\n                .centerCrop()\r\n                .into(holder.imageView);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return images.size();\r\n    }\r\n\r\n    public class ImageHolder extends RecyclerView.ViewHolder {\r\n        public ImageView imageView;\r\n\r\n        public ImageHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            imageView = itemView.findViewById(R.id.image_view_upload);\r\n\r\n        }\r\n    }\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- app/src/main/java/com/example/myapplication/ImageAdapter.java	(revision 8deda9ef76881ae2827ebbeead60412a3a07bdbd)
++++ app/src/main/java/com/example/myapplication/ImageAdapter.java	(date 1604071998085)
+@@ -42,8 +42,9 @@
+                 .centerCrop()
+                 .into(holder.imageView);
+ 
++    }
+ 
+-    }
++
+ 
+     @Override
+     public int getItemCount() {
Index: .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]/shelved.patch	(date 1604086250839)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_10_30_2020_2_30_PM_[Default_Changelist]/shelved.patch	(date 1604086250839)
@@ -0,0 +1,88 @@
+Index: app/src/main/java/com/example/myapplication/GraphActivity.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+>package com.example.myapplication;\r\n\r\nimport android.content.ContentResolver;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.View;\r\nimport android.webkit.MimeTypeMap;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.ListView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class GraphActivity extends AppCompatActivity{\r\n\r\n    private RecyclerView RecView;\r\n    private ImageAdapter IAdapter;\r\n    private DatabaseReference DB_Ref;\r\n    private List<Image> Limages;\r\n    private ProgressBar pro_Cir;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_graph_view);\r\n\r\n        /*runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                RecView = findViewById(R.id.recycler_vi);\r\n                RecView.setLayoutManager(new LinearLayoutManager(getApplicationContext()));\r\n                RecView.setHasFixedSize(true);\r\n            }\r\n        });*/\r\n        RecView = findViewById(R.id.recycler_vi);\r\n        RecView.setLayoutManager(new LinearLayoutManager(this));\r\n        RecView.setHasFixedSize(true);\r\n\r\n        pro_Cir = findViewById(R.id.progress_circular);\r\n        Limages = new ArrayList<>();\r\n\r\n        DB_Ref = FirebaseDatabase.getInstance().getReference(\"Project\").child(Long.toString(Project.projectId)).child(\"Images\");\r\n        Read_Images();\r\n        setupImage();\r\n        setupView();\r\n        setupButton();\r\n    }\r\n\r\n    private void Read_Images(){\r\n        DB_Ref.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                Limages.clear();\r\n                for(DataSnapshot snapshot : dataSnapshot.getChildren()){\r\n                    String imageUrl = snapshot.getValue().toString();\r\n//                    System.out.println(imageUrl);\r\n                    Image images = snapshot.getValue(Image.class);\r\n                    Limages.add(images);\r\n                }\r\n//                System.out.println(Limages.size());\r\n                IAdapter = new ImageAdapter(GraphActivity.this, Limages);\r\n                RecView.setAdapter(IAdapter);\r\n                //IAdapter.notifyDataSetChanged();\r\n                pro_Cir.setVisibility(View.INVISIBLE);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Toast.makeText(getApplicationContext(), \"Error!\", Toast.LENGTH_SHORT).show();\r\n                pro_Cir.setVisibility(View.INVISIBLE);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setupImage(){\r\n\r\n    }\r\n\r\n    private void setupView(){\r\n\r\n        //ImageView graphList = findViewById(R.id.ImageView);\r\n\r\n    }\r\n\r\n    private void setupButton(){\r\n        Button btUpload = findViewById(R.id.buttonUpload);\r\n        btUpload.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(GraphActivity.this, ImageChooser.class));\r\n            }\r\n        });\r\n\r\n        Button btDelete = findViewById(R.id.buttonDelete);\r\n        btDelete.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                deleteGraph();\r\n            }\r\n        });\r\n\r\n        Button btBack = findViewById(R.id.buttonBack);\r\n        btBack.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void uploadGraph(){\r\n\r\n    }\r\n\r\n\r\n    private void deleteGraph(){\r\n\r\n    }\r\n\r\n}\r\n
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+--- app/src/main/java/com/example/myapplication/GraphActivity.java	(revision 8deda9ef76881ae2827ebbeead60412a3a07bdbd)
++++ app/src/main/java/com/example/myapplication/GraphActivity.java	(date 1604071314615)
+@@ -35,6 +35,8 @@
+ import java.util.ArrayList;
+ import java.util.List;
+ 
++import javax.annotation.RegEx;
++
+ public class GraphActivity extends AppCompatActivity{
+ 
+     private RecyclerView RecView;
+@@ -42,6 +44,8 @@
+     private DatabaseReference DB_Ref;
+     private List<Image> Limages;
+     private ProgressBar pro_Cir;
++    private boolean isDelete = false;
++    private Button btUpload, btDelete, btBack;
+ 
+ 
+     @Override
+@@ -82,9 +86,20 @@
+                     Image images = snapshot.getValue(Image.class);
+                     Limages.add(images);
+                 }
+-//                System.out.println(Limages.size());
++
+                 IAdapter = new ImageAdapter(GraphActivity.this, Limages);
++
+                 RecView.setAdapter(IAdapter);
++                RecView.setClickable(true);
++                RecView.setOnClickListener(new View.OnClickListener() {
++                    @Override
++                    public void onClick(View v) {
++                        int itemPos = RecView.getChildLayoutPosition(v);
++                        System.out.println("Item Pos: " + itemPos);
++                    }
++                });
++
++
+                 //IAdapter.notifyDataSetChanged();
+                 pro_Cir.setVisibility(View.INVISIBLE);
+             }
+@@ -108,7 +123,7 @@
+     }
+ 
+     private void setupButton(){
+-        Button btUpload = findViewById(R.id.buttonUpload);
++        btUpload = findViewById(R.id.buttonUpload);
+         btUpload.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View v) {
+@@ -116,7 +131,7 @@
+             }
+         });
+ 
+-        Button btDelete = findViewById(R.id.buttonDelete);
++        btDelete = findViewById(R.id.buttonDelete);
+         btDelete.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View v) {
+@@ -124,7 +139,7 @@
+             }
+         });
+ 
+-        Button btBack = findViewById(R.id.buttonBack);
++        btBack = findViewById(R.id.buttonBack);
+         btBack.setOnClickListener(new View.OnClickListener() {
+             @Override
+             public void onClick(View v) {
+@@ -134,11 +149,6 @@
+ 
+     }
+ 
+-    private void uploadGraph(){
+-
+-    }
+-
+-
+     private void deleteGraph(){
+ 
+     }
